name: Deploy Alpha To Amazon ECS

on:
  pull_request:
    branches: [byron-action]
    types: [closed]

env:
  GIT_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
  H5P_PRIVATE_KEY: ${{ secrets.H5P_PRIVATE_KEY }}
  H5P_PUBLIC_KEY: ${{ secrets.H5P_PUBLIC_KEY }}
  JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
  AMS_ASSESSMENT_JWT_PUBLIC_KEY: ${{ secrets.AMS_ASSESSMENT_JWT_PUBLIC_KEY }}
  LIVE_TOKEN_PRIVATE_KEY: ${{ secrets.LIVE_TOKEN_PRIVATE_KEY }}

jobs:
  build-to-ecr:
    #if: github.event.pull_request.merged == true
    name: Build And Deploy ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Configure git credentials
        run: |
          git config --global url.https://$GIT_TOKEN@github.com/.insteadOf https://github.com/

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o deploy/handler -ldflags "-X github.com/KL-Engineering/kidsloop-cms-service/constant.GitHash=$(git rev-list -1 HEAD) -X github.com/KL-Engineering/kidsloop-cms-service/constant.BuildTimestamp=$(date +%s) -X github.com/KL-Engineering/kidsloop-cms-service/constant.LatestMigrate=$(ls schema/migrate | tail -1)"

      - name: prepare tokens
        env:
          H5P_PRIVATE_KEY: ${{ env.H5P_PRIVATE_KEY }}
          H5P_PUBLIC_KEY: ${{ env.H5P_PUBLIC_KEY }}
          JWT_PUBLIC_KEY: ${{ env.JWT_PUBLIC_KEY }}
          AMS_ASSESSMENT_JWT_PUBLIC_KEY: ${{ env.AMS_ASSESSMENT_JWT_PUBLIC_KEY }}
          LIVE_TOKEN_PRIVATE_KEY: ${{ env.LIVE_TOKEN_PRIVATE_KEY }}
        run: |
          echo "$H5P_PRIVATE_KEY" | base64 -d > deploy/h5p_private_key.pem
          echo "$H5P_PUBLIC_KEY" | base64 -d > deploy/h5p_public_key.pem
          echo "$JWT_PUBLIC_KEY" | base64 -d > deploy/jwt_public_key.pem
          echo "$AMS_ASSESSMENT_JWT_PUBLIC_KEY" | base64 -d > deploy/ams_assessment_jwt_public_key.pem
          echo "$LIVE_TOKEN_PRIVATE_KEY" | base64 -d > deploy/live_token_private_key.pem

      # - name: Build and Push Container
      #   uses: ./.github/actions/docker-build-and-push
      #   with:
      #     environment: ${{ needs.generate-version.outputs.tag }}
      #     region: global
      #     ecr_repository: kidsloop-cms-backend
      #     dockerfile_dir: deploy
      #     dockerfile_name: Dockerfile
      #     dockerfile_context: .
      #     ecr_aws_region: eu-west-2
      #     ecr_registry: 942095822719.dkr.ecr.eu-west-2.amazonaws.com
      #     ECR_AWS_ACCESS_KEY_ID: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
      #     ECR_AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}

  # deploy-alpha-dev-test:
  #   #if: github.event.pull_request.merged == true
  #   needs: build-to-ecr
  #   uses: ./.github/workflows/deploy-alpha-dev-call.yml
  #   with:
  #     ecs_aws_service: kidsloop-alpha-cms
  #     desired_ocitag: alpha-dev-latest
  #   secrets:
  #     AWS_ACCESS_KEY_ID_ALPHA_DEV: ${{ secrets.AWS_ACCESS_KEY_ID_ALPHA_DEV }}
  #     AWS_SECRET_ACCESS_KEY_ALPHA_DEV: ${{ secrets.AWS_SECRET_ACCESS_KEY_ALPHA_DEV }}
