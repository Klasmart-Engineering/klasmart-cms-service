name: container builds

concurrency:
  group: buildDeployContainers
  cancel-in-progress: false

on:
  release:
    types: [published]

# Repository specific variables
env:
  ecr_repository: kidsloop-cms-backend
  argocd_app_chart_tag_path: cmsBackend.tag
  argocd_app_component: cms-backend

  GIT_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
  H5P_PRIVATE_KEY: ${{ secrets.H5P_PRIVATE_KEY }}
  H5P_PUBLIC_KEY: ${{ secrets.H5P_PUBLIC_KEY }}
  JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
  AMS_ASSESSMENT_JWT_PUBLIC_KEY: ${{ secrets.AMS_ASSESSMENT_JWT_PUBLIC_KEY }}
  LIVE_TOKEN_PRIVATE_KEY: ${{ secrets.LIVE_TOKEN_PRIVATE_KEY }}

jobs:
  build-container:
    name: Build and Push Container
    runs-on: ubuntu-latest
    outputs:
      container_image: ${{steps.build-push.outputs.image_tags}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Configure git credentials
        run: |
          git config --global url.https://$GIT_TOKEN@github.com/.insteadOf https://github.com/

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o deploy/handler -ldflags "-X github.com/KL-Engineering/kidsloop-cms-service/constant.GitHash=$(git rev-list -1 HEAD) -X github.com/KL-Engineering/kidsloop-cms-service/constant.BuildTimestamp=$(date +%s) -X github.com/KL-Engineering/kidsloop-cms-service/constant.LatestMigrate=$(ls schema/migrate | tail -1)"

      - name: prepare tokens
        env:
          H5P_PRIVATE_KEY: ${{ env.H5P_PRIVATE_KEY }}
          H5P_PUBLIC_KEY: ${{ env.H5P_PUBLIC_KEY }}
          JWT_PUBLIC_KEY: ${{ env.JWT_PUBLIC_KEY }}
          AMS_ASSESSMENT_JWT_PUBLIC_KEY: ${{ env.AMS_ASSESSMENT_JWT_PUBLIC_KEY }}
          LIVE_TOKEN_PRIVATE_KEY: ${{ env.LIVE_TOKEN_PRIVATE_KEY }}
        run: |
          echo "$H5P_PRIVATE_KEY" | base64 -d > deploy/h5p_private_key.pem
          echo "$H5P_PUBLIC_KEY" | base64 -d > deploy/h5p_public_key.pem
          echo "$JWT_PUBLIC_KEY" | base64 -d > deploy/jwt_public_key.pem
          echo "$AMS_ASSESSMENT_JWT_PUBLIC_KEY" | base64 -d > deploy/ams_assessment_jwt_public_key.pem
          echo "$LIVE_TOKEN_PRIVATE_KEY" | base64 -d > deploy/live_token_private_key.pem

      - name: Build and Push Container
        id: build-push
        uses: KL-Engineering/github-action-workflows/.github/actions/docker-build-push@v3.2.0
        with:
          image_name: ${{ env.ecr_repository }}
          dockerfile: deploy/Dockerfile
          docker_build_context: deploy
          platforms: linux/amd64,linux/arm64
          tags: |
            type=ref,event=branch,suffix=-{{sha}}
            type=ref,event=pr,suffix=-{{sha}}
            type=ref,event=tag
          ECR_AWS_ACCESS_KEY_ID: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          ECR_AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}

  # deploy-ci:
  #   needs: [build-container]
  #   strategy:
  #     matrix:
  #       include:
  #         - environment: landingzone
  #           url: https://hub.landing-zone.kidsloop.live
  #           region: uk
  #   environment:
  #     url: ${{ matrix.url }}
  #     name: ${{ matrix.environment }}
  #   name: deploy
  #   runs-on: ubuntu-latest
  #   env:
  #     region: ${{ matrix.region }}
  #     environment: ${{ matrix.environment }}
  #   steps:
  #     - name: Deploy to ${{ matrix.environment }}
  #       uses: KL-Engineering/github-action-workflows/.github/actions/argocd-override-image-parameter@v3.2.0
  #       with:
  #         environment: ${{ env.environment }}
  #         region: ${{ env.region }}
  #         argocd_app: "${{ env.region }}-${{ env.environment }}-${{ env.argocd_app_component }}"
  #         argocd_app_chart_tag_path: ${{ env.argocd_app_chart_tag_path }}
  #         argocd_app_chart_tag_value: ${{ needs.build-container.outputs.container_image }}
  #         TOOLS_KUBECONFIG_CONTENT_B64: ${{ secrets.TOOLS_KUBECONFIG_CONTENT_B64 }}
  #         ARGOCD_AUTH_USERNAME: ${{ secrets.ARGOCD_AUTH_USERNAME }}
  #         ARGOCD_AUTH_PASSWORD: ${{ secrets.ARGOCD_AUTH_PASSWORD }}