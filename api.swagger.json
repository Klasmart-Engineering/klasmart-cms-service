{
  "swagger": "2.0",
  "info": {
    "description": "This is Asset server.",
    "version": "1.0.0",
    "title": "Swagger Asset",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "asset",
      "description": "Access to asset"
    },
    {
      "name": "tag",
      "description": "Access to tag"
    },
    {
      "name": "category",
      "description": "Operations about category"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/asset": {
      "post": {
        "tags": [
          "asset"
        ],
        "summary": "Create a new asset",
        "description": "",
        "operationId": "addAsset",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Asset object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "asset"
        ],
        "summary": "Update an existing asset",
        "description": "",
        "operationId": "updateAsset",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Asset data that needs to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAssetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Asset not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "asset"
        ],
        "summary": "Search asset",
        "description": "",
        "operationId": "searchAssets",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Search asset by ids",
            "type": "string"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Search asset by names",
            "type": "string"
          },
          {
            "in": "query",
            "name": "categories",
            "description": "Search asset by categories",
            "type": "string"
          },
          {
            "in": "query",
            "name": "size_min",
            "description": "Search asset by size_min",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size_max",
            "description": "Search asset by size_max",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Search asset by tags",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Search asset page size",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "description": "Search asset page idnex",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Asset not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/asset/{orderId}": {
      "get": {
        "tags": [
          "asset"
        ],
        "summary": "Find asset by ID",
        "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
        "operationId": "getAssetById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Asset not found"
          }
        }
      },
      "delete": {
        "tags": [
          "asset"
        ],
        "summary": "Delete asset by ID",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteAsset",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Asset not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Asset": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "url": {
          "type": "string",
          "example": "https://badanamu.com/song.mp3"
        },
        "uploader": {
          "type": "string"
        },
        "uploaded_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Asset"
      }
    },
    "UpdateAssetRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "url": {
          "type": "string",
          "example": "https://badanamu.com/song.mp3"
        }
      },
      "xml": {
        "name": "Asset"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}